syntax = "proto3";

package neoantigen;

message Transcript {
	/**
	The transcript identifier to which this neoepitope definition refers (e.g.: Ensembl transcript id)
	*/
	string identifier = 1;
	/**
	The genome assembly to which the gene definition refers to (e.g.: GRCh37, GRCh38)
	*/
	string assembly = 2;
	/**
	The gene symbol or gene identifier, optional as the transcript unequivocally identifies a gene
	*/
	string gene = 3;
}

message Mutation {
	/**
	The aminoacid position within the neoantigen. 1-based, starting in the N-terminus
	*/
	repeated int32 position = 1;
	/**
	Sequence of aminoacids for the wild type xmer
	*/
	string wildTypeXmer = 2;
	/**
	Sequence of aminoacids for the mutated xmer
	*/
	string mutatedXmer = 3;
}

/**
A neoantigen minimal definition
*/
message Neoantigen {
	/**
	A unique identifier of a neoantigen
	*/
	string identifier = 1;
	/**
	Patient identifier
	*/
	string patientIdentifier = 2;
	/**
	The transcript where the neoepitope was observed
	*/
	Transcript transcript = 3;
	/**
	The mutation
	*/
	Mutation mutation = 4;
	/**
	Clonality estimation. At the moment this is a boolean indicating whether there is clonality or not,
	there is no quantitive measurement at the moment.
	*/
	bool clonalityEstimation = 5;
	/**
	Expression value of the transcript from RNA data. Range [0, +inf].
	*/
	float rnaExpression = 6;
	/**
	Variant allele frequency from the DNA. Range [0.0, 1.0]
	*/
	float dnaVariantAlleleFrequency = 7;
	/**
	Variant allele frequency from the RNA. Range [0.0, 1.0]
	*/
	float rnaVariantAlleleFrequency = 8;
}

/**
The metadata required for analysis for a given patient + its patient identifier
*/
message Patient {
	/**
	Patient identifier
	*/
	string identifier = 1;
	/**
	Is RNA expression available?
	*/
	bool isRnaAvailable = 2;
	/**
	Tumor entity in TCGA study abbrevation style as described here: https://gdc.cancer.gov/resources-tcga-users/tcga-code-tables/tcga-study-abbreviations
	*/
	string tumorType = 3;
	/**
	MHC I classic molecules
	*/
	repeated Mhc1 mhc1 = 4;
	/**
	MHC II classic molecules
	*/
	repeated Mhc2 mhc2 = 5;
}

/**
This is a generic class to hold annotations from Neofox
*/
message Annotation {
	/**
	The name of the annotation
	*/
	string name = 1;
	/**
	The value of the annotation
	TODO: make this better to hold int, float and bool
	*/
	string value = 2;
}

/**
A set of annotations for a neoantigen
*/
message NeoantigenAnnotations {
	/**
	A unique identifier of a neoantigen
	*/
	string neoantigenIdentifier = 1;
	/**
	List of annotations
	*/
	repeated Annotation annotations = 2;
	/**
	The annotator
	*/
	string annotator = 3;
	/**
	The version of the annotator
	*/
	string annotatorVersion = 4;
	/**
	A timestamp determined when the annotation was created
	*/
	string timestamp = 5;
	/**
	Annotation resources MD5 hash
	*/
	string resourcesHash = 6;
}

/**
The zygosity of a given gene
 */
enum Zygosity {
	/**
	Two equal copies of the gene
	 */
  HOMOZYGOUS = 0;
  /**
  Two different copies of the gene
   */
  HETEROZYGOUS = 1;
  /**
  Only one copy of the gene
   */
  HEMIZYGOUS = 2;
  /**
  No copy of the gene
   */
  LOSS = 3;
}

/**
Valid names for MHC I classic genes
 */
enum Mhc1Name {
	A = 0;
	B = 1;
	C = 2;
}

/**
Valid names for MHC II classic genes.
DRA is not included in this list as it does not have much variability in the population and for our purpose is
considered constant.
 */
enum Mhc2GeneName {
	DRB1 = 0;
	DPA1 = 1;
	DPB1 = 2;
	DQA1 = 3;
	DQB1 = 4;
}

/**
Valid names for MHC II classic molecules
 */
enum Mhc2Name {
	DR = 0;
	DP = 1;
	DQ = 2;
}

/**
Models MHC I alleles related to the same MHC I gene, i.e. 2 alleles/2 isoforms per gene
 */
message Mhc1 {
	/**
	MHC I gene name
	 */
	Mhc1Name name = 1;
	/**
	Zygosity of the gene
	 */
	Zygosity zygosity = 2;
	/**
	The alleles of the gene (0, 1 or 2)
	 */
	repeated MhcAllele alleles = 3;
}

/**
Models MHC II alleles related to the same MHC II protein, i.e. 4 isoforms related to 2 genes with 2 alleles each
 */
message Mhc2 {
	/**
	MHC II molecule name
	 */
	Mhc2Name name = 1;
	/**
	List of MHC II genes
	 */
	repeated Mhc2Gene genes = 2;
	/**
	Different combinations of MHC II alleles building different isoforms
	 */
	repeated Mhc2Isoform isoforms = 3;
}

/**
MHC II isoform
 */
message Mhc2Isoform {
	/**
	Name to refer to the MHC II isoform
	 */
	string name = 1;
	/**
	The alpha chain of the isoform
	 */
	MhcAllele alphaChain = 2;
	/**
	The beta chain of the isoform
	 */
	MhcAllele betaChain = 3;
}

/**
MHC II gene
 */
message Mhc2Gene {
	/**
	MHC II gene name
	 */
	Mhc2GeneName name = 1;
	/**
	Zygosity of the gene
	 */
	Zygosity zygosity = 2;
	/**
	The alleles of the gene (0, 1 or 2)
	 */
	repeated MhcAllele alleles = 3;
}

/**
MHC allele representation. It does not include non synonymous changes to the sequence, changes in the non coding region
or changes in expression. See http://hla.alleles.org/nomenclature/naming.html for details
 */
message MhcAllele {
	/**
	HLA full name as provided by the user (e.g.: HLA-DRB1*13:01:02:03N). This will be parsed into name, gene and group.
	Any digit format is allowed for this field (ie: 4, 6 or 8 digits), 2 digits names are not specific enough for our
	purpose and thus invalid
	 */
	string fullName = 1;
	/**
	A specific HLA protein (e.g. HLA-DRB1*13:01). Alleles whose numbers differ in group and protein must differ in one
	or more nucleotide substitutions that change the amino acid sequence of the encoded protein.
	This name is normalized to avoid different representations of the same allele. For instance both HLA-DRB113:01 and
	HLA-DRB1*13:01:02:03N will be transformed into their normalised version HLA-DRB1*13:01. This name is also truncated
	to 4 digits. 2 digits names are not specific enough for our purpose and thus invalid
	 */
	string name = 2;
	/**
	The gene from either MHC I or II (e.g. DRB1, A) (this information is redundant with the Mhc1Gene.name and
	Mhc2Gene.name but it is convenient to have this at this level too, code will check for data coherence)
	 */
	string gene = 3;
	/**
	A group of alleles defined by a common serotype ie: Serological antigen carried by an allotype (e.g. 13 from HLA-DRB1*13)
	 */
	string group = 4;
	/**
	A specific protein (e.g.: 02 from HLA-DRB1*13:02)
	 */
	string protein = 5;
}
