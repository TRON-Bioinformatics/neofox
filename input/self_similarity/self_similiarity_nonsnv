#!/usr/bin/env python

import sys
import os.path
import compute_self_similarity
from input import MHC_I, MHC_II

my_path = os.path.abspath(os.path.dirname(__file__))

def selfsimilarity(props, mhc, db):
    """Returns self-similiarity between mutated and wt epitope according to Bjerregard et al.,
    Argument mhc indicates if determination for MHC I or MHC II epitopes
    """
    if mhc == MHC_I:
        mhcI_mut = props["MHC_I_epitope_.best_prediction."]
        mhcI_wt = props["WT_epitope_" + db]
    elif mhc == MHC_II:
        mhcI_mut = props["MHC_II_epitope_.best_prediction."]
        mhcI_wt = props["WT_epitope_" + db]
    selfsim = compute_self_similarity.selfsim(os.path.join(my_path, "./BLOSUM62-2.matrix.txt"))
    try:
        return str(selfsim.compute_K_hat_3(mhcI_mut, mhcI_wt))
    except ZeroDivisionError:
        return "NA"


def improved_binder(props, mhc):
    '''
    This function checks if mutated epitope is improved binder according to Bjerregard et al.
    '''
    if mhc == MHC_I:
        sc_mut = props["MHC_I_score_.best_prediction."].replace(",",".")
        sc_wt = props["WT_best_MHC_score_"].replace(",",".")
    elif mhc == MHC_II:
        sc_mut = props["MHC_II_score_.best_prediction."].replace(",",".")
        sc_wt = props["MHC_II_score_.WT."].replace(",",".")
    imp_binder = 0
    try:
        imp_binder = float(sc_wt)/float(sc_mut) >= 1.2
        return str(1) if imp_binder else str(0)
    except (ZeroDivisionError, ValueError) as e:
        return "NA"


def wrapper_selfsim_dbs(props, mhc):
    ''' selfsimilarity and test if improved binding for all potential WT epitopes from different databases
    '''
    list_dbs = ["ligandome", "proteome", "protein"]
    for db in list_dbs:
        selfsim = selfsimilarity(props, mhc, db)
        bdg = improved_binder(props, mhc)
        props["selfsimilarity_" + db] = selfsim
        props["improved_binder_" + db] = selfsim
    return props

def main():
    





if __name__ == '__main__':
    import sys
    basedir = "/projects/CM01_iVAC/immunogenicity_prediction/3rd_party_solutions/INPuT2"
    sys.path.append(basedir)
    import data_import

    file = "/projects/CM01_iVAC/immunogenicity_prediction/3rd_party_solutions/INPuT2/nonprogramm_files/20170713_IS_IM_data.complete.update_Dv10.csv"
    indel = False
    dat = data_import.import_dat_icam(file, indel)

    properties = {}
    for nam,char in zip(dat[0], dat[1][1]):
        properties[nam] = char


    print selfsimilarity(properties, MHC_I)
    print position_of_mutation_epitope(properties, MHC_I)
