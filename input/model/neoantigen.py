# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: neoantigen.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto


@dataclass
class Gene(betterproto.Message):
    # * The genome assembly to which the gene definition refers to (e.g.: GRCh37,
    # GRCh38)
    assembly: str = betterproto.string_field(1)
    # * The gene symbol or gene identifier, optional as the transcript
    # unequivocally identifies a gene
    gene: str = betterproto.string_field(2)
    # * The transcript identifier to which this neoepitope definition refers
    # (e.g.: Ensembl transcript id)
    transcript_identifier: str = betterproto.string_field(3)


@dataclass
class Mutation(betterproto.Message):
    # * The aminoacid position within the protein. 1-based, starting in the
    # N-terminus
    position: int = betterproto.int32_field(1)
    # * IUPAC code for the wild type aminoacid in this position
    wild_type_aminoacid: str = betterproto.string_field(2)
    # * IUPAC code for the mutated aminoacid in this position
    mutated_aminoacid: str = betterproto.string_field(3)
    # * The left flanking region of variable size in IUPAC codes
    left_flanking_region: str = betterproto.string_field(4)
    # * The size of the left flanking region
    size_left_flanking_region: int = betterproto.int32_field(5)
    # * The right flanking region of variable size in IUPAC codes
    right_flanking_region: str = betterproto.string_field(6)
    # * The size of the right flanking region
    size_right_flanking_region: int = betterproto.int32_field(7)


@dataclass
class Neoantigen(betterproto.Message):
    """* A neoantigen minimal definition"""

    # * The gene where the neoepitope corresponds
    gene: "Gene" = betterproto.message_field(1)
    # * The mutation
    mutation: "Mutation" = betterproto.message_field(2)
    # * Expression value of the transcript (any more definition on type of
    # expression? ie: digital from RNAseq, from microarrays, etc.)
    expression_value: float = betterproto.float_field(3)
    # * Clonality estimation. At the moment this is a boolean indicating whether
    # there is clonality or not, there is no quantitive measurement at the
    # moment.
    clonality_estimation: bool = betterproto.bool_field(4)
    # * Variant allele frequency in the range [0.0, 1.0]
    variant_allele_frequency: float = betterproto.float_field(5)
